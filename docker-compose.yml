version: "3.3"

###############################################
### UNTESTED AND NOT YET FOR PRODUCTION USE ###
###############################################

services:
  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=${PG_DB:-nontrivial-pg}
      - POSTGRES_USER=${PG_USER:-nontrivial-pg}
      - POSTGRES_PASSWORD=${PG_PASSWORD:?Postgres password is required}
    expose:
      - 80
    deploy:
      replicas: 4
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`localhost`)"
        - "traefik.http.routers.whoami.entrypoints=web"
    ### TODO: EXPOSE AS /api/ ###
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    restart: always

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    environment:
      - "BACKEND_BASE=https://softengagile-nontrivial.webwizard.uk/api/"
    expose:
      - 80
    deploy:
      replicas: 4
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`localhost`)"
        - "traefik.http.routers.whoami.entrypoints=web"
    ### TODO: EXPOSE AS / ###
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    restart: always

  database:
    image: "postgres:12"
    container_name: "database"
    environment:
      - POSTGRES_DB=${PG_DB:-nontrivial-pg}
      - POSTGRES_USER=${PG_USER:-nontrivial-pg}
      - POSTGRES_PASSWORD=${PG_PASSWORD:?Postgres password is required}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: always

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"

volumes:
  postgres_data:
    driver: local