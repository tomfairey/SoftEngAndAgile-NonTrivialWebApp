---

import BaseTemplate from '@layout/Base.astro'

import { newAccount } from '@modules/api'
import { AccountRole } from '@type/Account.types'

if(!Astro.locals.loggedIn) return Astro.redirect("/login")

if(!Astro.locals.admin) return Astro.redirect("/")

let username: string | undefined = undefined,
	name: string | undefined = undefined,
	role: string | undefined = undefined,
	disabled: boolean | undefined = undefined,
    message: string | undefined = undefined,
    now = Date.now();

if(Astro.request.method == "POST") {
    try {
        const data = await Astro.request.formData()

		username = data.get("username") as string,
		name = data.get("name") as string,
		role = data.get("role") as string,
        disabled = data.get("disabled") as string == "on"

		const password = data.get("password") as string,
		    password2 = data.get("password2") as string

        if(password != password2) {
            message = "Passwords didn't match..."
        } else if(username && password) {
            try {
                const {
                        result: {
							id
						}
                    } = await newAccount({ username, name, role, disabled, password }, Astro.locals.token)

                return Astro.redirect(`/account/${id}`)
            } catch(e: any) {
                if(e?.cause == "safe") {
                    message = e.message
                } else {
                    throw e
                }
            }
        } else {
            message = "Please make sure all details are filled out..."
        }
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}

---

<BaseTemplate>
	<h1>New Operating Company</h1>
	<h3>
		Create a new operating company below...
	</h3>

	<section class="form-container">
		<form action="" method="POST" data-astro-reload>
			<div class="form-group">
			  <label for="noc">Username:</label>
			  <input type="text" class="form-control" id="username" name="username" placeholder="Username" required value={ username }>
			</div>
			<div class="form-group">
			  <label for="name">Name:</label>
			  <input type="text" class="form-control" id="name" name="name" placeholder="Name" value={ name }>
			</div>
            <div class="form-group">
                <label for="role">Role:</label>
                <input type="text" class="form-control" id="role" name="role" placeholder="Role" maxlength="3" required value={ role }>
                <small id="roleHelp" class="form-text text-muted">Admin: {AccountRole.ADMIN} / Standard: {AccountRole.STANDARD}</small>
            </div>
			<div class="form-group">
                <label for="disabled">Disabled:</label>
                <input type="checkbox" id="disabled" name="disabled" checked={ disabled }>
            </div>
			<div class="form-group">
			  <label for="password">Password:</label>
			  <input type="password" class="form-control" id="password" name="password" placeholder="Password" required>
			</div>
            <div class="form-group">
                <label for="password2">Confirm Password:</label>
                <input type="password" class="form-control" id="password2" name="password2" placeholder="Confirm password" required>
            </div>
			<button type="submit" class="btn btn-primary">Submit</button>
		  </form>
	</section>

    { message ?
            <div class="toast-container position-fixed bottom-0 end-0 p-3" data-ts={ now } transition:animate="none">
                <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto">Error</strong>
                        <small>Just now</small>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">
                        { message }
                    </div>
                </div>
            </div>
            <script data-ts={ now } is:inline>
                (new bootstrap.Toast(document.getElementById('liveToast'))).show()
            </script>
        : '' }
</BaseTemplate>
